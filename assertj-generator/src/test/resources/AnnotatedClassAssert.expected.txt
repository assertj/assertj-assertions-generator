package org.assertj.assertions.generator.data;

/**
 * {@link AnnotatedClass} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractAnnotatedClassAssert} instead.
 */
@javax.annotation.processing.Generated(value="assertj-assertions-generator")
public class AnnotatedClassAssert extends AbstractAnnotatedClassAssert<AnnotatedClassAssert, AnnotatedClass> {

  /**
   * Creates a new <code>{@link AnnotatedClassAssert}</code> to make assertions on actual AnnotatedClass.
   * @param actual the AnnotatedClass we want to make assertions on.
   */
  public AnnotatedClassAssert(AnnotatedClass actual) {
    super(actual, AnnotatedClassAssert.class);
  }

  /**
   * An entry point for AnnotatedClassAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myAnnotatedClass)</code> and get specific assertion with code completion.
   * @param actual the AnnotatedClass we want to make assertions on.
   * @return a new <code>{@link AnnotatedClassAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static AnnotatedClassAssert assertThat(AnnotatedClass actual) {
    return new AnnotatedClassAssert(actual);
  }
}
