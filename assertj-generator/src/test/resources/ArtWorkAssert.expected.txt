package org.assertj.assertions.generator.data.art;

/**
 * {@link ArtWork} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractArtWorkAssert} instead.
 */
@javax.annotation.processing.Generated(value="assertj-assertions-generator")
public class ArtWorkAssert extends AbstractArtWorkAssert<ArtWorkAssert, ArtWork> {

  /**
   * Creates a new <code>{@link ArtWorkAssert}</code> to make assertions on actual ArtWork.
   * @param actual the ArtWork we want to make assertions on.
   */
  public ArtWorkAssert(ArtWork actual) {
    super(actual, ArtWorkAssert.class);
  }

  /**
   * An entry point for ArtWorkAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myArtWork)</code> and get specific assertion with code completion.
   * @param actual the ArtWork we want to make assertions on.
   * @return a new <code>{@link ArtWorkAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static ArtWorkAssert assertThat(ArtWork actual) {
    return new ArtWorkAssert(actual);
  }
}
