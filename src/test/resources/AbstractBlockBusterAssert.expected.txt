package org.assertj.assertions.generator.data;

/**
 * Abstract base class for {@link BlockBuster} specific assertions - Generated by CustomAssertionGenerator.
 */
@javax.annotation.processing.Generated(value="assertj-assertions-generator")
public abstract class AbstractBlockBusterAssert<S extends AbstractBlockBusterAssert<S, A>, A extends BlockBuster> extends AbstractMovieAssert<S, A> {

  /**
   * Creates a new <code>{@link AbstractBlockBusterAssert}</code> to make assertions on actual BlockBuster.
   * @param actual the BlockBuster we want to make assertions on.
   */
  protected AbstractBlockBusterAssert(A actual, Class<S> selfType) {
    super(actual, selfType);
  }

  /**
   * Verifies that the actual BlockBuster's revenue is equal to the given one.
   * @param revenue the given revenue to compare the actual BlockBuster's revenue to.
   * @return this assertion object.
   * @throws AssertionError - if the actual BlockBuster's revenue is not equal to the given one.
   */
  public S hasRevenue(int revenue) {
    // check that actual BlockBuster we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting revenue of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // check
    int actualRevenue = actual.getRevenue();
    if (actualRevenue != revenue) {
      failWithMessage(assertjErrorMessage, actual, revenue, actualRevenue);
    }

    // return the current assertion for method chaining
    return myself;
  }

  /**
   * Verifies that the actual BlockBuster's numberOfSpectators is equal to the given one.
   * @param numberOfSpectators the given numberOfSpectators to compare the actual BlockBuster's numberOfSpectators to.
   * @return this assertion object.
   * @throws AssertionError - if the actual BlockBuster's numberOfSpectators is not equal to the given one.
   */
  public S hasNumberOfSpectators(int numberOfSpectators) {
    // check that actual BlockBuster we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting numberOfSpectators of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // check
    int actualNumberOfSpectators = actual.numberOfSpectators;
    if (actualNumberOfSpectators != numberOfSpectators) {
      failWithMessage(assertjErrorMessage, actual, numberOfSpectators, actualNumberOfSpectators);
    }

    // return the current assertion for method chaining
    return myself;
  }

}
