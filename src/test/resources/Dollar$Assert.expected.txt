package org.assertj.assertions.generator.data;

/**
 * {@link Dollar$} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractDollar$Assert} instead.
 */
@javax.annotation.processing.Generated(value="assertj-assertions-generator")
public class Dollar$Assert extends AbstractDollar$Assert<Dollar$Assert, Dollar$> {

  /**
   * Creates a new <code>{@link Dollar$Assert}</code> to make assertions on actual Dollar$.
   * @param actual the Dollar$ we want to make assertions on.
   */
  public Dollar$Assert(Dollar$ actual) {
    super(actual, Dollar$Assert.class);
  }

  /**
   * An entry point for Dollar$Assert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myDollar$)</code> and get specific assertion with code completion.
   * @param actual the Dollar$ we want to make assertions on.
   * @return a new <code>{@link Dollar$Assert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static Dollar$Assert assertThat(Dollar$ actual) {
    return new Dollar$Assert(actual);
  }
}
