package org.assertj.assertions.generator.data.nba;

/**
 * {@link Player} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractPlayerAssert} instead.
 */
@jakarta.annotation.Generated(value="assertj-assertions-generator")
public class PlayerAssert extends AbstractPlayerAssert<PlayerAssert, Player> {

  /**
   * Creates a new <code>{@link PlayerAssert}</code> to make assertions on actual Player.
   * @param actual the Player we want to make assertions on.
   */
  public PlayerAssert(Player actual) {
    super(actual, PlayerAssert.class);
  }

  /**
   * An entry point for PlayerAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myPlayer)</code> and get specific assertion with code completion.
   * @param actual the Player we want to make assertions on.
   * @return a new <code>{@link PlayerAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static PlayerAssert assertThat(Player actual) {
    return new PlayerAssert(actual);
  }
}
